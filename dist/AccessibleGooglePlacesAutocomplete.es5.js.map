{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/AccessibleGooglePlacesAutocomplete.tsx","webpack:///external \"react\"","webpack:///external \"react-load-script\"","webpack:///external \"accessible-autocomplete/react\"","webpack:///external \"get-value\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","Script","react_1","translate","message","context","translation","addressAutoComplete","noResults","statusNoResults","statusResults","statusSelectedOption","undefined","smart_count","split","trim","replace","match","contextKey","AccessibleGooglePlacesAutocomplete","_super","props","_this","this","onAutoCompleteSelect","selectedPrediction","predictions","find","prediction","description","placesService","getDetails","placeId","place_id","placeResult","requestStatus","onConfirm","state","apiLoaded","autocompleteService","currentStatusMessage","onApiLoad","getSuggestions","getNoResultsMessage","getStatusResultsMessage","getStatusSelectedOptionMessage","getStatusNoResultsMessage","__extends","setState","google","maps","places","AutocompleteService","PlacesService","document","createElement","_a","selectedOption","option","length","contentSelectedOption","query","populateResults","googlePlacesOptions","request","__assign","input","getPlacePredictions","status","PlacesServiceStatus","OK","results","map","render","googlePlacesApiKey","id","_b","minLength","googlePlacesApi","encodeURIComponent","default","source","required","displayMenu","tNoResults","tStatusSelectedOption","tStatusNoResults","tStatusResults","url","onLoad","Component","require"],"mappings":"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","file":"AccessibleGooglePlacesAutocomplete.es5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","declare var google: any;\n\nimport * as React from 'react';\nimport * as Script from 'react-load-script';\nimport Autocomplete from 'accessible-autocomplete/react';\nimport * as get from 'get-value';\n\nfunction translate(message: string, context: any): string {\n  const messages = {\n    addressAutoComplete: {\n      noResults: 'Address not found',\n      statusNoResults: 'No matching addresses',\n      statusResults:\n        '%{smart_count} matching address is available |||| %{smart_count} matching addresses are available',\n      statusSelectedOption: 'Youâ€™ve selected %{option}'\n    }\n  };\n\n  let translation = get(messages, message);\n\n  if (!context) {\n    return translation;\n  }\n\n  if (!translation) {\n    return message;\n  }\n\n  // Support English plurals. More complex requirements should use an external\n  // i18n library like Polyglot.\n  if (context.smart_count !== undefined) {\n    const pluralForms = translation.split('||||');\n    const pluralIndex = context.smart_count === 1 ? 0 : 1;\n    translation = pluralForms[pluralIndex].trim();\n  }\n\n  // Interpolate results.\n  return translation.replace(\n    /%\\{(.*?)\\}/g,\n    (match: string, contextKey: string): string => {\n      if (context[contextKey] === undefined) {\n        return match;\n      }\n      if (typeof context[contextKey] === 'string') {\n        return context[contextKey].replace(/\\$/g, '$$');\n      }\n      return context[contextKey];\n    }\n  );\n}\n\ninterface IAccessibleGooglePlacesAutocompleteOptions {\n  bounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;\n  componentRestrictions?: google.maps.places.ComponentRestrictions;\n  location?: google.maps.LatLng;\n  offset?: number;\n  radius?: number;\n  types?: string[];\n}\n\ninterface IAccessibleGooglePlacesAutocompleteProps {\n  googlePlacesApiKey: string;\n  googlePlacesOptions?: IAccessibleGooglePlacesAutocompleteOptions;\n  id: string;\n  minLength?: number;\n  onConfirm: (placeResult: google.maps.places.PlaceResult) => void;\n  t?: any;\n}\n\ninterface IAccessibleGooglePlacesAutocompleteState {\n  apiLoaded: boolean;\n}\n\nexport class AccessibleGooglePlacesAutocomplete extends React.Component<\n  IAccessibleGooglePlacesAutocompleteProps,\n  IAccessibleGooglePlacesAutocompleteState\n> {\n  private autocompleteService: any;\n  private placesService: any;\n  private predictions: google.maps.places.AutocompletePrediction[];\n  private currentStatusMessage: string;\n\n  constructor(props: IAccessibleGooglePlacesAutocompleteProps) {\n    super(props);\n\n    this.state = {\n      apiLoaded: false\n    };\n\n    this.autocompleteService = null;\n    this.predictions = [];\n    this.currentStatusMessage = '';\n\n    this.onApiLoad = this.onApiLoad.bind(this);\n    this.getSuggestions = this.getSuggestions.bind(this);\n    this.getNoResultsMessage = this.getNoResultsMessage.bind(this);\n    this.getStatusResultsMessage = this.getStatusResultsMessage.bind(this);\n    this.getStatusSelectedOptionMessage = this.getStatusSelectedOptionMessage.bind(\n      this\n    );\n    this.getStatusNoResultsMessage = this.getStatusNoResultsMessage.bind(this);\n  }\n\n  public onAutoCompleteSelect = (value: string) => {\n    const selectedPrediction = this.predictions.find(\n      prediction => prediction.description === value\n    );\n\n    if (selectedPrediction !== undefined) {\n      this.placesService.getDetails(\n        { placeId: selectedPrediction.place_id },\n        (\n          placeResult: google.maps.places.PlaceResult,\n          requestStatus: string\n        ) => {\n          if (requestStatus === 'OK') {\n            this.props.onConfirm(placeResult);\n          }\n        }\n      );\n    }\n  };\n\n  public onApiLoad() {\n    this.setState(() => ({ apiLoaded: true }));\n    this.autocompleteService = new google.maps.places.AutocompleteService();\n    this.placesService = new google.maps.places.PlacesService(\n      document.createElement('div')\n    );\n  }\n\n  public getNoResultsMessage(): string {\n    const { t = translate } = this.props;\n    return t('addressAutoComplete.noResults');\n  }\n\n  public getStatusSelectedOptionMessage(selectedOption: string): string {\n    const { t = translate } = this.props;\n    return t('addressAutoComplete.statusSelectedOption', {\n      option: selectedOption\n    });\n  }\n\n  public getStatusNoResultsMessage(): string {\n    const { t = translate } = this.props;\n    const statusNoResults = t('addressAutoComplete.statusNoResults');\n\n    // don't repeat \"No matching addresses\" over and over\n    if (this.currentStatusMessage === statusNoResults) {\n      return '';\n    }\n\n    this.currentStatusMessage = statusNoResults;\n    return statusNoResults;\n  }\n\n  public getStatusResultsMessage(\n    length: number,\n    contentSelectedOption: string\n  ): string {\n    const { t = translate } = this.props;\n\n    if (contentSelectedOption) {\n      return '';\n    }\n\n    const statusResults = t('addressAutoComplete.statusResults', {\n      smart_count: length\n    });\n\n    // don't repeat \"5 matching addresses\" over and over\n    if (this.currentStatusMessage === statusResults) {\n      return '';\n    }\n\n    this.currentStatusMessage = statusResults;\n    return statusResults;\n  }\n\n  public getSuggestions(query: string, populateResults: any): void {\n    const { googlePlacesOptions = {} } = this.props;\n\n    const request: google.maps.places.AutocompletionRequest = {\n      ...googlePlacesOptions,\n      input: query\n    };\n\n    const getPlaces = (\n      predictions: google.maps.places.AutocompletePrediction[],\n      status: string\n    ) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        populateResults([]);\n        return;\n      }\n\n      this.predictions = predictions;\n      const results = predictions.map(prediction => prediction.description);\n      populateResults(results);\n    };\n\n    this.autocompleteService.getPlacePredictions(request, getPlaces);\n  }\n\n  public render() {\n    const { googlePlacesApiKey, id, minLength = 4 } = this.props;\n    const { apiLoaded } = this.state;\n    const encodedKey = encodeURIComponent(googlePlacesApiKey);\n    const googlePlacesApi = `https://maps.googleapis.com/maps/api/js?key=${encodedKey}&libraries=places`;\n\n    if (apiLoaded) {\n      return (\n        <Autocomplete\n          id={id}\n          source={this.getSuggestions}\n          minLength={minLength}\n          required\n          displayMenu=\"overlay\"\n          tNoResults={this.getNoResultsMessage}\n          tStatusSelectedOption={this.getStatusSelectedOptionMessage}\n          tStatusNoResults={this.getStatusNoResultsMessage}\n          tStatusResults={this.getStatusResultsMessage}\n          onConfirm={this.onAutoCompleteSelect}\n        />\n      );\n    }\n\n    return <Script url={googlePlacesApi} onLoad={this.onApiLoad} />;\n  }\n}\n","module.exports = require(\"react\");","module.exports = require(\"react-load-script\");","module.exports = require(\"accessible-autocomplete/react\");","module.exports = require(\"get-value\");"],"sourceRoot":""}