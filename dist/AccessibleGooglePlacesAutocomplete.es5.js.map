{"version":3,"sources":["webpack:///webpack/bootstrap cf9667df4ddad805ba77","webpack:///./src/AccessibleGooglePlacesAutocomplete.js","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///external \"react-load-script\"","webpack:///external \"accessible-autocomplete/react\"","webpack:///external \"get-value\""],"names":["onConfirm","console","log","translate","message","context","messages","addressAutoComplete","noResults","statusNoResults","statusSelectedOption","statusResults","translation","get","smart_count","undefined","pluralForms","split","pluralIndex","trim","replace","match","contextKey","AccessibleGooglePlacesAutocomplete","props","state","apiLoaded","service","currentStatusMessage","onApiLoad","bind","getSuggestions","getNoResultsMessage","getStatusSelectedOptionMessage","getStatusNoResultsMessage","getStatusResultsMessage","setState","google","maps","places","AutocompleteService","t","selectedOption","option","length","contentSelectedOption","query","populateResults","countryCode","request","input","types","componentRestrictions","country","getPlaces","predictions","status","PlacesServiceStatus","OK","results","map","prediction","description","getPlacePredictions","googleMapsApiKey","id","minLength","encodedKey","encodeURIComponent","googleMapsApi","propTypes","PropTypes","string","isRequired","number","func","defaultProps"],"mappings":"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","file":"AccessibleGooglePlacesAutocomplete.es5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cf9667df4ddad805ba77","/* global google */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Script from 'react-load-script';\nimport Autocomplete from 'accessible-autocomplete/react';\nimport get from 'get-value';\n\nfunction onConfirm() {\n  console.log('confirmed address');\n}\n\nfunction translate(message, context) {\n  const messages = {\n    addressAutoComplete: {\n      noResults: 'Address not found',\n      statusNoResults: 'No matching addresses',\n      statusSelectedOption: 'Youâ€™ve selected %{option}',\n      statusResults:\n        '%{smart_count} matching address is available |||| %{smart_count} matching addresses are available'\n    }\n  };\n\n  let translation = get(messages, message);\n\n  if (!context) {\n    return translation;\n  }\n\n  if (!translation) {\n    return message;\n  }\n\n  // Support English plurals. More complex requirements should use an external\n  // i18n library like Polyglot.\n  if (context.smart_count !== undefined) {\n    const pluralForms = translation.split('||||');\n    const pluralIndex = context.smart_count === 1 ? 0 : 1;\n    translation = pluralForms[pluralIndex].trim();\n  }\n\n  // Interpolate results.\n  return translation.replace(/%\\{(.*?)\\}/g, (match, contextKey) => {\n    if (context[contextKey] === undefined) {\n      return match;\n    }\n    if (typeof context[contextKey] === 'string') {\n      return context[contextKey].replace(/\\$/g, '$$');\n    }\n    return context[contextKey];\n  });\n}\n\nexport default class AccessibleGooglePlacesAutocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiLoaded: false\n    };\n\n    this.service = null;\n    this.currentStatusMessage = '';\n\n    this.onApiLoad = this.onApiLoad.bind(this);\n    this.getSuggestions = this.getSuggestions.bind(this);\n    this.getNoResultsMessage = this.getNoResultsMessage.bind(this);\n    this.getStatusSelectedOptionMessage = this.getStatusSelectedOptionMessage.bind(\n      this\n    );\n    this.getStatusNoResultsMessage = this.getStatusNoResultsMessage.bind(this);\n    this.getStatusResultsMessage = this.getStatusResultsMessage.bind(this);\n  }\n\n  onApiLoad() {\n    this.setState(() => ({ apiLoaded: true }));\n    this.service = new google.maps.places.AutocompleteService();\n  }\n\n  getNoResultsMessage() {\n    const { t } = this.props;\n    return t('addressAutoComplete.noResults');\n  }\n\n  getStatusSelectedOptionMessage(selectedOption) {\n    const { t } = this.props;\n    return t('addressAutoComplete.statusSelectedOption', {\n      option: selectedOption\n    });\n  }\n\n  getStatusNoResultsMessage() {\n    const { t } = this.props;\n    const statusNoResults = t('addressAutoComplete.statusNoResults');\n\n    // don't repeat \"No matching addresses\" over and over\n    if (this.currentStatusMessage === statusNoResults) {\n      return '';\n    }\n\n    this.currentStatusMessage = statusNoResults;\n    return statusNoResults;\n  }\n\n  getStatusResultsMessage(length, contentSelectedOption) {\n    const { t } = this.props;\n\n    if (contentSelectedOption) {\n      return '';\n    }\n\n    const statusResults = t('addressAutoComplete.statusResults', {\n      smart_count: length\n    });\n\n    // don't repeat \"5 matching addresses\" over and over\n    if (this.currentStatusMessage === statusResults) {\n      return '';\n    }\n\n    this.currentStatusMessage = statusResults;\n    return statusResults;\n  }\n\n  getSuggestions(query, populateResults) {\n    const { countryCode } = this.props;\n\n    const request = {\n      input: query,\n      types: ['geocode'],\n      componentRestrictions: { country: countryCode }\n    };\n\n    function getPlaces(predictions, status) {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        populateResults([]);\n        return;\n      }\n\n      const results = predictions.map(prediction => prediction.description);\n      populateResults(results);\n    }\n\n    this.service.getPlacePredictions(request, getPlaces);\n  }\n\n  render() {\n    const { googleMapsApiKey, id, minLength } = this.props;\n    const { apiLoaded } = this.state;\n    const encodedKey = encodeURIComponent(googleMapsApiKey);\n    const googleMapsApi = `https://maps.googleapis.com/maps/api/js?key=${encodedKey}&libraries=places`;\n    if (apiLoaded) {\n      return (\n        <Autocomplete\n          id={id}\n          source={this.getSuggestions}\n          minLength={minLength}\n          required\n          displayMenu=\"overlay\"\n          tNoResults={this.getNoResultsMessage}\n          tStatusSelectedOption={this.getStatusSelectedOptionMessage}\n          tStatusNoResults={this.getStatusNoResultsMessage}\n          tStatusResults={this.getStatusResultsMessage}\n          onConfirm={onConfirm}\n        />\n      );\n    }\n    return <Script url={googleMapsApi} onLoad={this.onApiLoad} />;\n  }\n}\n\nAccessibleGooglePlacesAutocomplete.propTypes = {\n  googleMapsApiKey: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  minLength: PropTypes.number,\n  t: PropTypes.func\n};\n\nAccessibleGooglePlacesAutocomplete.defaultProps = {\n  minLength: 4,\n  t: translate\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/AccessibleGooglePlacesAutocomplete.js","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"react-load-script\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-load-script\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"accessible-autocomplete/react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"accessible-autocomplete/react\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"get-value\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"get-value\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}